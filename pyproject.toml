[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "LLMTailor"
description = "Tools for merging pre-trained large language models"
readme = "README.md"
license = { text = "LGPL-3.0-or-later" }
version = "0.0.1"
authors = [{ name = "Minqiu Sun", email = "xfwsmq@gmail.com" }]
requires-python = ">=3.10"
dependencies = [
    "torch>=2.0.0",
    "tqdm==4.67.1",
    "click==8.2.1",
    "safetensors~=0.5.2",
    "accelerate~=1.6.0",
    "pydantic~=2.10.6",
    "immutables==0.21",
    "transformers>=4.45.2",
    "tokenizers>=0.20.1",
    "huggingface_hub",
    "peft",
    "typing-extensions",
    "sentencepiece",
    "protobuf",
    "scipy",
    "datasets",
]

[project.optional-dependencies]
dev = ["black~=25.1.0", "isort~=6.0.1", "pre-commit~=4.2.0"]
test = ["pytest~=8.4.0"]
evolve = ["ray", "cma", "lm_eval", "wandb"]
vllm = ["vllm==0.7.2", "lm_eval[vllm]"]

[project.urls]
repository = "https://github.com/SunMinqiu/LLMTailor.git"


[project.scripts]
llmtailor-yaml = "llmtailor.scripts.run_yaml:main"
llmtailor-legacy = "llmtailor.scripts.legacy:main"
llmtailor-layershuffle = "llmtailor.scripts.layershuffle:main"
bakllama = "llmtailor.scripts.bakllama:main"
llmtailor-moe = "llmtailor.scripts.moe:main"
llmtailor-tokensurgeon = "llmtailor.scripts.tokensurgeon:main"
llmtailor-extract-lora = "llmtailor.scripts.extract_lora:main"
llmtailor-evolve = "llmtailor.scripts.evolve:main"
llmtailor-pytorch = "llmtailor.scripts.merge_raw_pytorch:main"
llmtailor-multi = "llmtailor.scripts.multimerge:main"

[tool.setuptools]
packages = [
    "llmtailor",
    "llmtailor.io",
    "llmtailor.merge_methods",
    "llmtailor.moe",
    "llmtailor.scripts",
    "llmtailor.evo",
    "llmtailor.tokenizer",
    "llmtailor.tokensurgeon",
    "llmtailor.architecture",
    "llmtailor._data",
    "llmtailor._data.architectures",
    "llmtailor._data.chat_templates",
]
include-package-data = true
package-data = { "llmtailor._data.architectures" = [
    "*.json",
], "llmtailor._data.chat_templates" = [
    "*.jinja",
] }

[tool.isort]
profile = "black"

[tool.black]
line-length = 88
target-version = ['py37']
include = '\.pyi?$'

[tool.pytest.ini_options]
minversion = "6.0"
filterwarnings = [
    "ignore::pydantic.PydanticDeprecatedSince20:huggingface_hub.*:",
    "ignore::FutureWarning:huggingface_hub.*:",
    "ignore:Attempting Automatic Merge:UserWarning",
    "ignore:No architecture config available:UserWarning",
]
testpaths = ["tests"]

[dependency-groups]
test = ["pytest~=8.4.0"]
dev = ["black~=25.1.0", "isort~=6.0.1", "pre-commit~=4.2.0"]
